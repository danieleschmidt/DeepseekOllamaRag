version: '3.8'

services:
  # DeepSeek RAG Application
  deepseek-rag:
    build:
      context: .
      target: production
    container_name: deepseek-rag-app
    ports:
      - "8501:8501"
    environment:
      - DEBUG=false
      - OLLAMA_BASE_URL=http://ollama:11434
      - LLM_MODEL=deepseek-r1:1.5b
      - MAX_FILE_SIZE_MB=50
      - SESSION_TIMEOUT_MINUTES=30
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./cache:/app/cache
    depends_on:
      - ollama
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - deepseek-network

  # Ollama Service
  ollama:
    image: ollama/ollama:latest
    container_name: deepseek-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - deepseek-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: deepseek-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - deepseek-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: deepseek-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - deepseek-rag
    restart: unless-stopped
    networks:
      - deepseek-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: deepseek-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - deepseek-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: deepseek-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - deepseek-network

volumes:
  ollama-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  deepseek-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16